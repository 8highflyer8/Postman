{
	"info": {
		"_postman_id": "5c9bef79-6b0e-4cb3-af6d-8adb28616de0",
		"name": "Maximenko_HW_2_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20722391"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/first\r",
							"//1. Отправить запрос\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Проверить, что в body приходит правильный string\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followOriginalHttpMethod": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrey",
							"disabled": true
						},
						{
							"key": "age",
							"value": "37",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_3\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let name_check = jsonData.name;\r",
							"let age_check = jsonData.age;\r",
							"let salary_check = jsonData.salary;\r",
							"\r",
							"let name_1 = \"Andrey\";\r",
							"let age_1 = 37;\r",
							"let salary_1 = 100000;\r",
							"\r",
							"//console.log(name_check);\r",
							"//console.log(name_1);\r",
							"//console.log(age_1);\r",
							"//console.log(salary_1);\r",
							"\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"name_check\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(name_1);\r",
							"});\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"age_check\", function () {\r",
							"    pm.expect(+jsonData.age).to.eql(+age_1);\r",
							"});\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"salary_check\", function () {\r",
							"    pm.expect(+jsonData.salary).to.eql(+salary_1);\r",
							"});\r",
							"//7. Спарсить request.\r",
							"let req = request.data;\r",
							"let name_check_2 = req.name;\r",
							"let age_check_2 = req.age;\r",
							"let salary_check_2 = req.salary;\r",
							"let u_salary_1_5_year = req.salary*4;\r",
							"\r",
							"\r",
							"//console.log(req.name);\r",
							"//console.log(req.age);\r",
							"//console.log(req.salary);\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name_check_2\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age_check_2\", function () {\r",
							"    pm.expect(+jsonData.age).to.eql(+req.age);\r",
							"});\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"salary_check_2\", function () {\r",
							"    pm.expect(+jsonData.salary).to.eql(+req.salary);\r",
							"});\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(\"family=\",jsonData.family);\r",
							"console.log(\"u_salary_1_5_year=\",u_salary_1_5_year);\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    pm.expect(+jsonData.family.u_salary_1_5_year).to.eql(+u_salary_1_5_year);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Andrey",
							"type": "text"
						},
						{
							"key": "age",
							"value": "37",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "100000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_3\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"let name_check = jsonData.name;\r",
							"let age_check = jsonData.age;\r",
							"let salary_check = jsonData.salary;\r",
							"\r",
							"//4. Спарсить request.\r",
							"let query = {}; \r",
							"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
							"\r",
							"let name_check_2 = query.name;\r",
							"let age_check_2 = query.age;\r",
							"let salary_check_2 = query.salary;\r",
							"\r",
							"\r",
							"//console.log(name_check_2);\r",
							"//console.log(jsonData.name);\r",
							"//console.log(age_check_2);\r",
							"//console.log(alary_check_2);\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name_check_2\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(query.name);\r",
							"});\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age_check_2\", function () {\r",
							"    pm.expect(+jsonData.age).to.eql(+query.age);\r",
							"});\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"salary_check_2\", function () {\r",
							"    pm.expect(+jsonData.salary).to.eql(+query.salary);\r",
							"});\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log(jsonData.family);\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"dog_checkpar_name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"dog_checkpar_age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"dog_name_check_2\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"dog_age_check_2\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Andrey&age=37&salary=100000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrey"
						},
						{
							"key": "age",
							"value": "37"
						},
						{
							"key": "salary",
							"value": "100000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_4\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"let name_check = jsonData.name;\r",
							"let age_check = jsonData.age;\r",
							"let salary_check = jsonData.salary;\r",
							"\r",
							"//4. Спарсить request.\r",
							"let query = {}; \r",
							"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
							"\r",
							"let name_check_2 = query.name;\r",
							"let age_check_2 = query.age;\r",
							"let salary_check_2 = query.salary;\r",
							"\r",
							"\r",
							"//console.log(name_check_2);\r",
							"//console.log(jsonData.name);\r",
							"//console.log(age_check_2);\r",
							"//console.log(alary_check_2);\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name_check_2\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(query.name);\r",
							"});\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"age_check_2\", function () {\r",
							"    pm.expect(+jsonData.age).to.eql(+query.age);\r",
							"});\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log(`salary_req=`,query.name);\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(`salary_resp=`,jsonData.salary);\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(`salary_0=`,+jsonData.salary[0]);\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(`salary_1=`,+jsonData.salary[1]);\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(`salary_2=`,+jsonData.salary[2]);\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"salary_check_2_0\", function () {\r",
							"    pm.expect(+jsonData.salary[0]).to.eql(+query.salary);\r",
							"});\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"salary_check_2_1\", function () {\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(+query.salary*2);\r",
							"});\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"salary_check_2_2\", function () {\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(+query.salary*3);\r",
							"});\r",
							"//15. Создать в окружении переменную name\r",
							"pm.environment.set(\"name\", \"Andrey\");\r",
							"//16. Создать в окружении переменную age\r",
							"pm.environment.set(\"age\", 37);\r",
							"//17. Создать в окружении переменную salary\r",
							"pm.environment.set(\"salary\", 100000);\r",
							"//18. Передать в окружение переменную name\r",
							"//19. Передать в окружение переменную age\r",
							"//20. Передать в окружение переменную salary\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"jsonData.salary.forEach(function(s){\r",
							"       console.log(+s);\r",
							"   });\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Andrey&age=37&salary=100000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrey"
						},
						{
							"key": "age",
							"value": "37"
						},
						{
							"key": "salary",
							"value": "100000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"http://162.55.220.72:5005/user_info_2\r",
							"//1. Вставить параметр salary из окружения в request\r",
							"//вставил value в body {{name}}\r",
							"//2. Вставить параметр age из окружения в age\r",
							"//вставил value в body {{age}}\r",
							"//3. Вставить параметр name из окружения в name\r",
							"//вставил value в body {{name}}\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let start_qa_salary_checkparam = jsonData.person\r",
							"// 7. Спарсить request.\r",
							"let req = request.data;\r",
							"let salary_check_2 = req.salary;\r",
							"let age_check_2 = req.age;\r",
							"let u_salary_1_5_year = req.salary*4;\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"start_qa_salary_checkparam\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});  \r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"qa_salary_after_6_months_checkparam\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"qa_salary_after_12_months_checkparam\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"qa_salary_after_1.5_year_checkparam\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"qa_salary_after_3.5_years_checkparam\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"person_checkparam\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary_check_2\", function () {\r",
							"    pm.expect(+jsonData.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary_check_2_6\", function () {\r",
							"    pm.expect(+jsonData.qa_salary_after_6_months).to.eql(+req.salary*2);\r",
							"});\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary_check_2_12\", function () {\r",
							"    pm.expect(+jsonData.qa_salary_after_12_months).to.eql(+req.salary*2.7);\r",
							"});\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary_check_2_1.5\", function () {\r",
							"    pm.expect(+jsonData[\"qa_salary_after_1.5_year\"]).to.eql(+req.salary*3.3);\r",
							"});\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary_check_2_3.5\", function () {\r",
							"    pm.expect(+jsonData[\"qa_salary_after_3.5_years\"]).to.eql(+req.salary*3.8);\r",
							"});\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"person_u_name_1\", function () {\r",
							"    pm.expect(+jsonData.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"person_u_name_1\", function () {\r",
							"    pm.expect(+jsonData.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"person_u_name_1\", function () {\r",
							"    pm.expect(+jsonData.person.u_salary_5_years).to.eql(+(req.salary)*4.2);\r",
							"});\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}